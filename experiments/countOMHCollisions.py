import sys
import os.path

if len(sys.argv) != 2:
    sys.stderr.write('Usage: countOMHCollisions.py omh-sketches\n\n' +
            'The sketch file is generated by omh_sketch where each record is in a two line (fasta) format. ' +
            'The first line contains the name, followed by four omh parameters k l m 0(strand?). ' +
            'The second line is m sketches (hash values) of length k*l each, glued into one string.\n' +
            'Two consecutive records represent a pair of sequences to be compared. A pair is said to have ' +
            'a hash collision if they share at least one common sketch at the same index between 1 and m. ' +
            'Output the total number of pairs and the number of pairs that have a hash collision to ' +
            '!!!stdout!!!\n')
    sys.exit(1)

if not os.path.isfile(sys.argv[1]):
    sys.stderr.write('Error: cannot read sketch file {}\n'.format(sys.argv[1]))
    sys.exit(1)

with open(sys.argv[1]) as fin:
    # parse omh parameters from the first line, assume all other sketches used the same set of parameters
    parameters = fin.readline().split()
    single_sketch_len = int(parameters[1])*int(parameters[2])
    repeats = int(parameters[3])

    total = 0
    collision = 0

    while parameters:
        total += 1
        a = fin.readline().strip()
        fin.readline() # skip header line of the second sequence
        b = fin.readline().strip()
        parameters = fin.readline() # return empty string when no more data to read

        j = 0
        k = single_sketch_len
        match = False

        for i in range(repeats):
            ha = a[j:k]
            hb = b[j:k]
            if ha == hb:
                match = True
                break

        if match:
            collision += 1

print(total,collision)

